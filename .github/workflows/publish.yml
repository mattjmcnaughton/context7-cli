name: Publish

on:
  release:
    types: [created, published]

permissions:
  contents: write

jobs:
  build-binaries:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: context7-cli
            asset_name: context7-cli-linux-x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: context7-cli
            asset_name: context7-cli-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: context7-cli
            asset_name: context7-cli-macos-aarch64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Using dtolnay/rust-toolchain action maintained by David Tolnay,
    # a trusted and prolific member of the Rust community (maintainer of serde, syn, and many other core crates)
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Build binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Prepare uncompressed binary
      run: |
        cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} ${{ matrix.asset_name }}

    - name: Compress binary
      run: |
        tar czf ${{ matrix.asset_name }}.tar.gz ${{ matrix.asset_name }}

    - name: Upload binaries to release
      # Using softprops/action-gh-release action maintained by softprops.
      # Most popular release package.
      uses: softprops/action-gh-release@v2.4.1
      with:
        files: |
          ${{ matrix.asset_name }}
          ${{ matrix.asset_name }}.tar.gz
